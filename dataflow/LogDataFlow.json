{
	"name": "LogDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "LogSource",
						"type": "DatasetReference"
					},
					"name": "LogStream"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CleanLog",
						"type": "DatasetReference"
					},
					"name": "CleanLog"
				}
			],
			"transformations": [
				{
					"name": "ChangeType"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as string,",
				"          Correlationid as string,",
				"          Operationname as string,",
				"          Status as string,",
				"          Eventcategory as string,",
				"          Level as string,",
				"          Time as string,",
				"          Subscription as string,",
				"          Eventinitiatedby as string,",
				"          Resourcetype as string,",
				"          Resourcegroup as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LogStream",
				"LogStream derive(Time = toTimestamp(concat(substring(Time, 0,10),' ',substring(Time, 12,8)),'yyyy-MM-dd hh:mm:ss')) ~> ChangeType",
				"ChangeType sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as string,",
				"          Correlationid as string,",
				"          Operationname as string,",
				"          Status as string,",
				"          Eventcategory as string,",
				"          Level as string,",
				"          Time as string,",
				"          Subscription as string,",
				"          Eventinitiatedby as string,",
				"          Resourcetype as string,",
				"          Resourcegroup as string",
				"     ),",
				"     partitionFileNames:['CleanLog.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> CleanLog"
			]
		}
	}
}